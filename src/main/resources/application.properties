
# Seta o profile padrão para iniciar no ambiente
spring.profiles.active=prod

# expoe a api em um contexto especifico
server.servlet.context-path=/finndash

# configuracao de banco de dados
#spring.jpa.database=MYSQL
#spring.datasource.url=jdbc:mysql://localhost:3306/ba_agendamentos_db?createDatabaseIfNotExist=true&SSL=false
#spring.datasource.username=root
#spring.datasource.password=root

# Hikari - configuracoes de gerenciamento de conexoes ao banco de dados
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.maximum-pool-size=25

# Exibe comandos SQL
#spring.jpa.properties.hibernate.show_sql=false
#spring.jpa.properties.hibernate.use_sql_comments=false
#spring.jpa.properties.hibernate.format_sql=false
#spring.jpa.properties.hibernate.type=trace
#spring.jpa.properties.hibernate.id.new_generator_mappings=false
#spring.jpa.show-sql=false

# Habilita o flyway
#spring.flyway.enabled=true

# retorna bad request caso alguma propriedade invalida seja enviada para a api
spring.jackson.deserialization.fail-on-unknown-properties=true

# configuracoes do spring actuator
management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=health

#API Info - Usado para configurar o Swagger
api-info.title=Finn Dash - API de Controle de Finanças Pessoais
api-info.description=Api de recursos para o sistema de controle de finanças pessoais FinnDash
api-info.version=1.0.0
api-info.terms-url=
api-info.contact-name=Feedev
api-info.contact-webpage=https://github.com/users/feebsilvaa
api-info.contact-email=bsilva.fe@gmail.com
api-info.license=
api-info.license-url=





